{"ast":null,"code":"import _slicedToArray from \"/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/src/App.js\";\nimport React, { useEffect } from 'react';\nimport FattMerchantApi from './apis/FattMerchantApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './App.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport Typography from '@material-ui/core/Typography';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  detailsRoot: {\n    width: '100%',\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  },\n  success: {\n    backgroundColor: green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  }\n}));\nconst TAX_RATE = 0.07;\n\nfunction ccyFormat(num) {\n  return \"\".concat(num.toFixed(2));\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow(desc, qty, unit, id) {\n  const price = priceRow(qty, unit);\n  return {\n    desc,\n    qty,\n    unit,\n    price,\n    id\n  };\n}\n\nfunction subtotal(items) {\n  return items.map(({\n    price\n  }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles();\n\n  const className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const fattMerchantApi = new FattMerchantApi();\n\n  const _React$useState = React.useState({\n    data: null,\n    loading: true,\n    error: false,\n    errorMessage: null,\n    rows: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fattMerchantApi.getCatalogItems().then(response => {\n      setState({\n        data: response,\n        loading: false,\n        error: false,\n        errorMessage: state.errorMessage,\n        rows: []\n      });\n      console.log(response);\n    }).catch(error => {\n      setState({\n        data: null,\n        loading: false,\n        error: true,\n        errorMessage: error,\n        rows: []\n      });\n    });\n  }, []);\n\n  if (state.loading) {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  } else if (state.error) {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"An error occurred\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, state.errorMessage));\n  }\n\n  const columns = [{\n    title: \"Name\",\n    field: \"item\"\n  }, {\n    title: \"Price(USD)\",\n    field: \"price\",\n    type: 'numeric'\n  }, {\n    title: \"Stock\",\n    field: \"in_stock\"\n  }];\n  const invoiceSubtotal = subtotal(state.rows);\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(MySnackbarContentWrapper, {\n    onClose: handleClose,\n    variant: \"success\",\n    message: \"This is a success message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Catalog\",\n    columns: columns,\n    data: state.data.data,\n    actions: [{\n      icon: AddIcon,\n      tooltip: 'Add Item To Invoice',\n      onClick: (event, rowData) => {\n        if (state.rows.length === 0) {\n          state.rows.push(createRow(rowData.item, 1, rowData.price, rowData.id));\n        } else {\n          let found = false;\n          state.rows.map(row => {\n            if (row.desc === rowData.item) {\n              row.qty++;\n              row.price = row.unit * row.qty;\n              found = true;\n            }\n          });\n\n          if (!found) {\n            state.rows.push(createRow(rowData.item, 1, rowData.price, rowData.id));\n          }\n        }\n\n        state.rows.map(row => {\n          row.price = row.qty * row.unit;\n        });\n        setState({\n          data: state.data,\n          loading: state.loading,\n          error: state.error,\n          errorMessage: state.errorMessage,\n          rows: state.rows\n        });\n      }\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.detailsRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Invoice\"), React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"spanning table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    colSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Details\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Price\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Desc\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Qty.\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Unit\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Sum\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, state.rows.map(row => React.createElement(TableRow, {\n    key: row.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, row.desc), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, row.qty), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, row.unit), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, ccyFormat(row.price)))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    rowSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Subtotal\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, ccyFormat(invoiceSubtotal))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Tax\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"\".concat((TAX_RATE * 100).toFixed(0), \" %\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, ccyFormat(invoiceTaxes))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"Total\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, ccyFormat(invoiceTotal))))), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: useStyles.submit,\n    onClick: () => {\n      const lineItems = state.rows.map(row => {\n        return {\n          id: row.id,\n          item: row.desc,\n          quantity: row.qty,\n          price: row.price\n        };\n      });\n      fattMerchantApi.createInvoice({\n        customer_id: \"acdd7dc5-69a4-4d31-9187-67d50007e8d0\",\n        payment_method_id: \"68758ae5-ccde-4f95-9dfa-078590a2f070\",\n        meta: {\n          tax: invoiceTaxes,\n          subtotal: invoiceSubtotal,\n          lineItems: lineItems\n        },\n        total: invoiceTotal,\n        url: \"https://omni.fattmerchant.com/#/bill/\",\n        send_now: false,\n        files: []\n      }).then(setOpen(true));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Create Invoice\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/src/App.js"],"names":["React","useEffect","FattMerchantApi","makeStyles","MaterialTable","Grid","CircularProgress","AddIcon","Table","Typography","TableBody","TableCell","TableHead","TableRow","Paper","Button","Snackbar","SnackbarContent","CheckCircleIcon","green","PropTypes","clsx","IconButton","CloseIcon","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","detailsRoot","width","overflowX","table","minWidth","success","backgroundColor","message","display","alignItems","icon","fontSize","iconVariant","opacity","marginRight","TAX_RATE","ccyFormat","num","toFixed","priceRow","qty","unit","createRow","desc","id","price","subtotal","items","map","reduce","sum","i","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","variantIcon","propTypes","string","func","oneOf","isRequired","useStyles2","margin","App","fattMerchantApi","useState","data","loading","error","errorMessage","rows","state","setState","open","setOpen","handleClose","event","reason","getCatalogItems","then","response","console","log","catch","columns","title","field","type","invoiceSubtotal","invoiceTaxes","invoiceTotal","vertical","horizontal","tooltip","onClick","rowData","length","push","item","found","row","submit","lineItems","quantity","createInvoice","customer_id","payment_method_id","meta","tax","total","url","send_now","files"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport FattMerchantApi from './apis/FattMerchantApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './App.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport Typography from '@material-ui/core/Typography';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  detailsRoot: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst TAX_RATE = 0.07;\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow(desc, qty, unit, id) {\n  const price = priceRow(qty, unit);\n  return { desc, qty, unit, price, id };\n}\n\nfunction subtotal(items) {\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const fattMerchantApi = new FattMerchantApi();\n  const [state, setState] = React.useState({\n    data: null,\n    loading: true,\n    error: false,\n    errorMessage: null,\n    rows: []\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fattMerchantApi.getCatalogItems()\n    .then(response => {\n      setState({\n        data: response,\n        loading: false,\n        error: false,\n        errorMessage: state.errorMessage,\n        rows: []\n      })\n      console.log(response)\n    }).catch(error => {\n      setState({\n        data: null,\n        loading: false,\n        error: true,\n        errorMessage: error,\n        rows: []\n      })\n    })\n  }, []);\n\n  if (state.loading) {\n    return (\n      <div className=\"App\">\n        <CircularProgress />\n      </div>\n    )\n  } else if (state.error) {\n    return (\n      <div className=\"App\">\n        <p>An error occurred</p>\n        <p>{state.errorMessage}</p>\n      </div>\n    )\n  }\n\n  const columns = [\n    {title: \"Name\", field: \"item\"},\n    {title: \"Price(USD)\", field: \"price\", type: 'numeric'},\n    {title: \"Stock\", field: \"in_stock\"}\n  ]\n  const invoiceSubtotal = subtotal(state.rows);\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n  return (\n    <div className=\"App\">\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant=\"success\"\n          message=\"This is a success message!\"\n        />\n      </Snackbar>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <MaterialTable\n            title=\"Catalog\"\n            columns={columns}\n            data={state.data.data}\n            actions={[\n              {\n                  icon: AddIcon,\n                  tooltip: 'Add Item To Invoice',\n                  onClick: (event, rowData) => {\n                    if (state.rows.length === 0){\n                      state.rows.push(createRow(rowData.item, 1, rowData.price, rowData.id));\n                    } else {\n                      let found = false\n                      state.rows.map(row => {\n                        if (row.desc === rowData.item) {\n                          row.qty++;\n                          row.price = row.unit * row.qty\n                          found = true\n                        }\n                      })\n                      if (!found) {\n                        state.rows.push(createRow(rowData.item, 1, rowData.price, rowData.id))\n                      }\n                    }\n                    state.rows.map(row => {\n                      row.price = row.qty * row.unit\n                    })\n                    setState({\n                      data: state.data,\n                      loading: state.loading,\n                      error: state.error,\n                      errorMessage: state.errorMessage,\n                      rows: state.rows\n                    })\n                  }\n              }\n          ]}\n            />\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.detailsRoot}>\n            <Typography variant=\"body1\">Invoice</Typography>\n            <Table className={classes.table} aria-label=\"spanning table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={3}>\n                    Details\n                  </TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Desc</TableCell>\n                  <TableCell align=\"right\">Qty.</TableCell>\n                  <TableCell align=\"right\">Unit</TableCell>\n                  <TableCell align=\"right\">Sum</TableCell>\n                </TableRow>\n              </TableHead>  \n              <TableBody>\n                {state.rows.map(row => (\n                  <TableRow key={row.desc}>\n                    <TableCell>{row.desc}</TableCell>\n                    <TableCell align=\"right\">{row.qty}</TableCell>\n                    <TableCell align=\"right\">{row.unit}</TableCell>\n                    <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\n                  </TableRow>\n                ))}\n                <TableRow>\n                  <TableCell rowSpan={3} />\n                  <TableCell colSpan={2}>Subtotal</TableCell>\n                  <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Tax</TableCell>\n                  <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n                  <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={2}>Total</TableCell>\n                  <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={useStyles.submit}\n                onClick={() => {\n                  const lineItems = state.rows.map(row => {\n                    return {\n                      id: row.id,\n                      item: row.desc,\n                      quantity: row.qty,\n                      price: row.price\n                    }\n                  })\n                  fattMerchantApi.createInvoice(\n                    {\n                      customer_id: \"acdd7dc5-69a4-4d31-9187-67d50007e8d0\",\n                      payment_method_id: \"68758ae5-ccde-4f95-9dfa-078590a2f070\",\n                      meta: {\n                        tax: invoiceTaxes,\n                        subtotal: invoiceSubtotal,\n                        lineItems: lineItems\n                      },\n                      total: invoiceTotal,\n                      url: \"https://omni.fattmerchant.com/#/bill/\",\n                      send_now: false,\n                      files: []\n                    }\n                  ).then(\n                    setOpen(true)\n                  )\n                }}\n            >\n                Create Invoice\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}