{"ast":null,"code":"import _slicedToArray from \"/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/src/App.js\";\nimport React, { useEffect } from 'react';\nimport FattMerchantApi from './apis/FattMerchantApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './App.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  detailsRoot: {\n    width: '100%',\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n}));\nconst TAX_RATE = 0.07;\n\nfunction ccyFormat(num) {\n  return \"\".concat(num.toFixed(2));\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow(desc, qty, unit) {\n  const price = priceRow(qty, unit);\n  return {\n    desc,\n    qty,\n    unit,\n    price\n  };\n}\n\nfunction subtotal(items) {\n  return items.map(({\n    price\n  }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nfunction App() {\n  const classes = useStyles();\n  const fattMerchantApi = new FattMerchantApi();\n\n  const _React$useState = React.useState({\n    data: null,\n    loading: true,\n    error: false,\n    errorMessage: null,\n    rows: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  useEffect(() => {\n    fattMerchantApi.getCatalogItems().then(response => {\n      setState({\n        data: response,\n        loading: false,\n        error: false,\n        errorMessage: state.errorMessage,\n        rows: []\n      });\n      console.log(response);\n    }).catch(error => {\n      setState({\n        data: null,\n        loading: false,\n        error: true,\n        errorMessage: error,\n        rows: []\n      });\n    });\n  }, []);\n\n  if (state.loading) {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  } else if (state.error) {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"An error occurred\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, state.errorMessage));\n  }\n\n  const columns = [{\n    title: \"Name\",\n    field: \"item\"\n  }, {\n    title: \"Price(USD)\",\n    field: \"price\",\n    type: 'numeric'\n  }, {\n    title: \"Stock\",\n    field: \"in_stock\"\n  }];\n  const invoiceSubtotal = subtotal(state.rows);\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Catalog\",\n    columns: columns,\n    data: state.data.data,\n    actions: [{\n      icon: AddIcon,\n      tooltip: 'Add Item To Invoice',\n      onClick: (event, rowData) => {\n        if (state.rows.length === 0) {\n          state.rows.push(createRow(rowData.item, 1, rowData.price));\n        } else {\n          state.rows.map(row => {\n            if (row.desc === rowData.item) {\n              row.qty++;\n              rowData.price = rowData.unit * rowData.qty;\n            } else {\n              state.rows.push(createRow(rowData.item, 1, rowData.price));\n            }\n          });\n        }\n\n        setState({\n          data: state.data,\n          loading: state.loading,\n          error: state.error,\n          errorMessage: state.errorMessage,\n          rows: state.rows\n        });\n      }\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.detailsRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"spanning table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    colSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Details\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Price\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Desc\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Qty.\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Unit\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Sum\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, state.rows.map(row => React.createElement(TableRow, {\n    key: row.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, row.desc), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, row.qty), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, row.unit), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, ccyFormat(row.price)))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    rowSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Subtotal\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, ccyFormat(invoiceSubtotal))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Tax\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"\".concat((TAX_RATE * 100).toFixed(0), \" %\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, ccyFormat(invoiceTaxes))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Total\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, ccyFormat(invoiceTotal)))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bocasio-MAC/Desktop/sigmacapital/fattmerchant/fattmerchant-app/src/App.js"],"names":["React","useEffect","FattMerchantApi","makeStyles","MaterialTable","Grid","CircularProgress","AddIcon","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","detailsRoot","width","overflowX","table","minWidth","TAX_RATE","ccyFormat","num","toFixed","priceRow","qty","unit","createRow","desc","price","subtotal","items","map","reduce","sum","i","App","classes","fattMerchantApi","useState","data","loading","error","errorMessage","rows","state","setState","getCatalogItems","then","response","console","log","catch","columns","title","field","type","invoiceSubtotal","invoiceTaxes","invoiceTotal","icon","tooltip","onClick","event","rowData","length","push","item","row"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport FattMerchantApi from './apis/FattMerchantApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './App.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  detailsRoot: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n}));\n\nconst TAX_RATE = 0.07;\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow(desc, qty, unit) {\n  const price = priceRow(qty, unit);\n  return { desc, qty, unit, price };\n}\n\nfunction subtotal(items) {\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nfunction App() {\n  const classes = useStyles();\n  const fattMerchantApi = new FattMerchantApi();\n  const [state, setState] = React.useState({\n    data: null,\n    loading: true,\n    error: false,\n    errorMessage: null,\n    rows: []\n  })\n\n  useEffect(() => {\n    fattMerchantApi.getCatalogItems()\n    .then(response => {\n      setState({\n        data: response,\n        loading: false,\n        error: false,\n        errorMessage: state.errorMessage,\n        rows: []\n      })\n      console.log(response)\n    }).catch(error => {\n      setState({\n        data: null,\n        loading: false,\n        error: true,\n        errorMessage: error,\n        rows: []\n      })\n    })\n  }, []);\n\n  if (state.loading) {\n    return (\n      <div className=\"App\">\n        <CircularProgress />\n      </div>\n    )\n  } else if (state.error) {\n    return (\n      <div className=\"App\">\n        <p>An error occurred</p>\n        <p>{state.errorMessage}</p>\n      </div>\n    )\n  }\n\n  const columns = [\n    {title: \"Name\", field: \"item\"},\n    {title: \"Price(USD)\", field: \"price\", type: 'numeric'},\n    {title: \"Stock\", field: \"in_stock\"}\n  ]\n  const invoiceSubtotal = subtotal(state.rows);\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n  return (\n    <div className=\"App\">\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <MaterialTable\n            title=\"Catalog\"\n            columns={columns}\n            data={state.data.data}\n            actions={[\n              {\n                  icon: AddIcon,\n                  tooltip: 'Add Item To Invoice',\n                  onClick: (event, rowData) => {\n                    if (state.rows.length === 0){\n                      state.rows.push(createRow(rowData.item, 1, rowData.price));\n                    } else {\n                      state.rows.map(row => {\n                        if (row.desc === rowData.item) {\n                          row.qty++;\n                          rowData.price = rowData.unit * rowData.qty\n                        } else {\n                          state.rows.push(createRow(rowData.item, 1, rowData.price))\n                        }\n                      })\n                    }\n                    setState({\n                      data: state.data,\n                      loading: state.loading,\n                      error: state.error,\n                      errorMessage: state.errorMessage,\n                      rows: state.rows\n                    })\n                  }\n              }\n          ]}\n            />\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.detailsRoot}>\n            <Table className={classes.table} aria-label=\"spanning table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={3}>\n                    Details\n                  </TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Desc</TableCell>\n                  <TableCell align=\"right\">Qty.</TableCell>\n                  <TableCell align=\"right\">Unit</TableCell>\n                  <TableCell align=\"right\">Sum</TableCell>\n                </TableRow>\n              </TableHead>  \n              <TableBody>\n                {state.rows.map(row => (\n                  <TableRow key={row.desc}>\n                    <TableCell>{row.desc}</TableCell>\n                    <TableCell align=\"right\">{row.qty}</TableCell>\n                    <TableCell align=\"right\">{row.unit}</TableCell>\n                    <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\n                  </TableRow>\n                ))}\n                <TableRow>\n                  <TableCell rowSpan={3} />\n                  <TableCell colSpan={2}>Subtotal</TableCell>\n                  <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Tax</TableCell>\n                  <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n                  <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={2}>Total</TableCell>\n                  <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}